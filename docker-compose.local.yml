version: "3.7"

services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - mongo
      - redis
    restart: always
    environment:
      REDIS_HOST: redis
      REDIS_PASSWORD: ""
      BACKEND_BASE_URL: ${NGROK_HOST}
      BACKEND_LISTEN_ADDRESS: 0.0.0.0:8080
      BACKEND_LISTEN_URL: http://0.0.0.0:8080
      CLAUDE_API_KEY:
      GROK_API_KEY:
      OPENAI_API_KEY:
      FIREWORKS_API_KEY:
      STRIPE_TOKEN: setup-for-testing
      TELEGRAM_BOT_TOKEN:
      MONGO_DB_CONNECTION_STRING: mongodb://root:example@mongo:27017/?tls=false
      MONGO_DB_NAME: test
      SLACK_BOT_TOKEN: dev
      SLACK_SIGNING_SECRET: dev
      STRIPE_ENDPOINT_SECRET: dev
      STRIPE_ENDPOINT_SUFFIX: dev

      # setup to enable telegram system notifications
      TELEGRAM_SYSTEM_TOKEN: ""
      TELEGRAM_SYSTEM_TO: ""
    networks:
      - my_network
    volumes:
      - ./data:/data

  nginx:
    image: nginx:1.19-alpine
    restart: always
    depends_on:
      - backend
    volumes:
      - ./infra/nginx-dev/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - my_network

  mongo:
    image: mongo:6.0.13
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - my_network

  redis:
    image: redis:7.0.9-alpine
    restart: always
    environment:
      REDIS_PASSWORD: example
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
